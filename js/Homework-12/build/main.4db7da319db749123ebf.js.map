{"version":3,"sources":["webpack:///./fetchWeather.js","webpack:///./getGeoPosition.js","webpack:///./index.js"],"names":["baseUrl","key","options","getWeathcer","query","fetch","then","response","json","fetchWeather","data","console","log","location","name","document","querySelector","src","current","condition","icon","alt","text","textContent","temp_c","humidity","wind_kph","classList","remove","addEventListener","e","preventDefault","currentTarget","elements","city","value","timeout","maximumAge","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","catch","error","PNotify"],"mappings":"qKAAMA,EAAU,wCAEVC,EAAM,2CCDJC,cCKR,SAASC,EAAYC,IFFN,SAAsBA,GACnC,OAAOC,MAAK,GAAIL,EAAUC,EAAd,MAAuBG,GAASE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UEEtEC,CAAaL,GAAOE,KAAK,SAAAI,GACvBC,QAAQC,IAAI,OAAQF,GACpBC,QAAQC,IAAIF,EAAKG,SAASC,MAC1BC,SAASC,cAAc,kBAAkBC,IAAMP,EAAKQ,QAAQC,UAAUC,KACtEL,SAASC,cAAc,kBAAkBK,IAAMX,EAAKQ,QAAQC,UAAUG,KACtEP,SAASC,cAAc,2BAA2BO,YAChDb,EAAKG,SAASC,KAChBC,SAASC,cAAc,uBAAuBO,YAC5Cb,EAAKQ,QAAQM,OADf,IAGAT,SAASC,cAAc,2BAA2BO,YAChDb,EAAKQ,QAAQO,SADf,IAGAV,SAASC,cAAc,uBAAuBO,YAC5Cb,EAAKQ,QAAQQ,SADf,MAGAX,SAASC,cAAc,uBAAuBO,YAC5Cb,EAAKQ,QAAQQ,SADf,MAGAX,SAASC,cAAc,6BAA6BO,YAApD,GACEb,EAAKQ,QAAQC,UAAUG,KAEzBP,SAASC,cAAc,YAAYW,UAAUC,OAAO,eAzB3Cb,SAASC,cAAc,QA6B/Ba,iBAAiB,SAAU,SAASC,GACvCA,EAAEC,iBACF5B,EAAY2B,EAAEE,cAAcC,SAASC,KAAKC,UDlCpCjC,EAAU,CACdkC,QAAS,IACTC,WAAY,OAGP,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAQtC,MCgC3DI,KAAK,SAAAO,GAEJV,EADiBU,EAAS+B,OAAOC,SAAtB,IAAkChC,EAAS+B,OAAOE,aAG9DC,MAAM,SAAAC,GACLC,IAAQD,MACN","file":"main.4db7da319db749123ebf.js","sourcesContent":["const baseUrl = 'https://api.apixu.com/v1/current.json';\n\nconst key = '?key=be5f9fa4cd644103a12104533190708';\n\nexport default function fetchWeather(query) {\n  return fetch(`${baseUrl}${key}&q=${query}`).then(response => response.json());\n}\n","export default () => {\n  const options = {\n    timeout: 5000,\n    maximumAge: 30 * 60 * 60 * 1000,\n  };\n\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\n  });\n};\n","import './styles.css';\nimport getGeoPosition from './getGeoPosition';\nimport fetchWeather from './fetchWeather';\nimport PNotify from 'pnotify/dist/es/PNotify';\nconst form = document.querySelector('form');\n\nfunction getWeathcer(query) {\n  fetchWeather(query).then(data => {\n    console.log('data', data);\n    console.log(data.location.name);\n    document.querySelector('[class=\"icon\"]').src = data.current.condition.icon;\n    document.querySelector('[class=\"icon\"]').alt = data.current.condition.text;\n    document.querySelector('[data-field=\"location\"]').textContent =\n      data.location.name;\n    document.querySelector('[data-field=\"temp\"]').textContent = `${\n      data.current.temp_c\n    }\\u2103`;\n    document.querySelector('[data-field=\"humidity\"]').textContent = `${\n      data.current.humidity\n    }%`;\n    document.querySelector('[data-field=\"wind\"]').textContent = `${\n      data.current.wind_kph\n    }kph`;\n    document.querySelector('[data-field=\"wind\"]').textContent = `${\n      data.current.wind_kph\n    }kph`;\n    document.querySelector('[data-field=\"conditions\"]').textContent = `${\n      data.current.condition.text\n    }`;\n    document.querySelector('.weather').classList.remove('is-hidden');\n  });\n}\n\nform.addEventListener('submit', function(e) {\n  e.preventDefault();\n  getWeathcer(e.currentTarget.elements.city.value);\n})\n\ngetGeoPosition()\n  .then(location => {\n    const query = `${location.coords.latitude},${location.coords.longitude}`;\n    getWeathcer(query);\n  })\n  .catch(error => {\n    PNotify.error(\n      'Нет прав доступа к геопозиции, используйте поиск по имени города.',\n    );\n  });\n"],"sourceRoot":""}