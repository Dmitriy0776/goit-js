{"version":3,"sources":["webpack:///./fetchWeather.js","webpack:///./getGeoPosition.js","webpack:///./index.js"],"names":["baseUrl","key","options","getWeathcer","query","spinner","document","querySelector","classList","add","setTimeout","fetch","then","response","json","fetchWeather","data","src","current","condition","icon","alt","text","textContent","location","name","temp_c","humidity","wind_kph","remove","addEventListener","e","preventDefault","currentTarget","elements","city","value","timeout","maximumAge","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","catch","error","PNotify"],"mappings":"qKAAMA,EAAU,wCAEVC,EAAM,2CCDJC,cCKR,SAASC,EAAYC,GACnB,IAAMC,EAAUC,SAASC,cAAc,YACvCF,EAAQG,UAAUC,IAAI,UACtBH,SAASC,cAAc,YAAYC,UAAUC,IAAI,aACjDC,WACE,kBFPW,SAAsBN,GACnC,OAAOO,MAAK,GAAIX,EAAUC,EAAd,MAAuBG,GAASQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SEOlEC,CAAaX,GAAOQ,KAAK,SAAAI,GACvBV,SAASC,cAAc,kBAAkBU,IACvCD,EAAKE,QAAQC,UAAUC,KACzBd,SAASC,cAAc,kBAAkBc,IACvCL,EAAKE,QAAQC,UAAUG,KACzBhB,SAASC,cAAc,2BAA2BgB,YAChDP,EAAKQ,SAASC,KAChBnB,SAASC,cAAc,uBAAuBgB,YAC5CP,EAAKE,QAAQQ,OADf,IAGApB,SAASC,cAAc,2BAA2BgB,YAChDP,EAAKE,QAAQS,SADf,IAGArB,SAASC,cAAc,uBAAuBgB,YAC5CP,EAAKE,QAAQU,SADf,MAGAtB,SAASC,cAAc,uBAAuBgB,YAC5CP,EAAKE,QAAQU,SADf,MAGAtB,SAASC,cAAc,6BAA6BgB,YAApD,GACEP,EAAKE,QAAQC,UAAUG,KAGzBjB,EAAQG,UAAUqB,OAAO,UACzBvB,SAASC,cAAc,YAAYC,UAAUqB,OAAO,gBAExD,MAlCSvB,SAASC,cAAc,QAsC/BuB,iBAAiB,SAAU,SAASC,GACvCA,EAAEC,iBACF7B,EAAY4B,EAAEE,cAAcC,SAASC,KAAKC,UD3CpClC,EAAU,CACdmC,QAAS,IACTC,WAAY,OAGP,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAQvC,MCyC3DU,KAAK,SAAAY,GAEJrB,EADiBqB,EAASqB,OAAOC,SAAtB,IAAkCtB,EAASqB,OAAOE,aAG9DC,MAAM,SAAAC,GACLC,IAAQD,MACN","file":"main.e1a6dec6022b80ebfa48.js","sourcesContent":["const baseUrl = 'https://api.apixu.com/v1/current.json';\n\nconst key = '?key=be5f9fa4cd644103a12104533190708';\n\nexport default function fetchWeather(query) {\n  return fetch(`${baseUrl}${key}&q=${query}`).then(response => response.json());\n}\n","export default () => {\n  const options = {\n    timeout: 5000,\n    maximumAge: 30 * 60 * 60 * 1000,\n  };\n\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\n  });\n};\n","import './styles.css';\nimport getGeoPosition from './getGeoPosition';\nimport fetchWeather from './fetchWeather';\nimport PNotify from 'pnotify/dist/es/PNotify';\nconst form = document.querySelector('form');\n\nfunction getWeathcer(query) {\n  const spinner = document.querySelector('.spinner');\n  spinner.classList.add('active');\n  document.querySelector('.weather').classList.add('is-hidden');\n  setTimeout(\n    () =>\n      fetchWeather(query).then(data => {\n        document.querySelector('[class=\"icon\"]').src =\n          data.current.condition.icon;\n        document.querySelector('[class=\"icon\"]').alt =\n          data.current.condition.text;\n        document.querySelector('[data-field=\"location\"]').textContent =\n          data.location.name;\n        document.querySelector('[data-field=\"temp\"]').textContent = `${\n          data.current.temp_c\n        }\\u2103`;\n        document.querySelector('[data-field=\"humidity\"]').textContent = `${\n          data.current.humidity\n        }%`;\n        document.querySelector('[data-field=\"wind\"]').textContent = `${\n          data.current.wind_kph\n        }kph`;\n        document.querySelector('[data-field=\"wind\"]').textContent = `${\n          data.current.wind_kph\n        }kph`;\n        document.querySelector('[data-field=\"conditions\"]').textContent = `${\n          data.current.condition.text\n        }`;\n\n        spinner.classList.remove('active');\n        document.querySelector('.weather').classList.remove('is-hidden');\n      }),\n    1500,\n  );\n}\n\nform.addEventListener('submit', function(e) {\n  e.preventDefault();\n  getWeathcer(e.currentTarget.elements.city.value);\n});\n\ngetGeoPosition()\n  .then(location => {\n    const query = `${location.coords.latitude},${location.coords.longitude}`;\n    getWeathcer(query);\n  })\n  .catch(error => {\n    PNotify.error(\n      'Нет прав доступа к геопозиции, используйте поиск по имени города.',\n    );\n  });\n"],"sourceRoot":""}