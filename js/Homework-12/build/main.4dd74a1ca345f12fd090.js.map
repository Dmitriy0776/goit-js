{"version":3,"sources":["webpack:///./fetchWeather.js","webpack:///./getGeoPosition.js","webpack:///./index.js"],"names":["baseUrl","key","options","button","document","querySelector","input","getWeathcer","query","fetch","then","response","json","fetchWeather","data","console","log","location","name","src","current","condition","icon","alt","text","textContent","temp_c","humidity","wind_kph","classList","remove","onclick","value","timeout","maximumAge","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","catch","error","PNotify"],"mappings":"qKAEMA,EAAU,wCAEVC,EAAM,2CCAJC,cCAFC,EAASC,SAASC,cAAc,mBAChCC,EAAQF,SAASC,cAAc,iBAIrC,SAASE,EAAYC,IFDN,SAAsBA,GACnC,OAAOC,MAAK,GAAIT,EAAUC,EAAd,MAAuBO,GAClCE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UEA3BC,CAAaL,GACRE,KAAK,SAAAI,GACJC,QAAQC,IAAI,OAAQF,GACpBC,QAAQC,IAAIF,EAAKG,SAASC,MAC1Bd,SAASC,cAAc,kBAAkBc,IAAML,EAAKM,QAAQC,UAAUC,KACtElB,SAASC,cAAc,kBAAkBkB,IAAMT,EAAKM,QAAQC,UAAUG,KACtEpB,SAASC,cAAc,2BAA2BoB,YAAcX,EAAKG,SAASC,KAC9Ed,SAASC,cAAc,uBAAuBoB,YAAiBX,EAAKM,QAAQM,OAA5E,IACAtB,SAASC,cAAc,2BAA2BoB,YAAiBX,EAAKM,QAAQO,SAAhF,IACAvB,SAASC,cAAc,uBAAuBoB,YAAiBX,EAAKM,QAAQQ,SAA5E,MACAxB,SAASC,cAAc,uBAAuBoB,YAAiBX,EAAKM,QAAQQ,SAA5E,MACAxB,SAASC,cAAc,6BAA6BoB,YAApD,GAAqEX,EAAKM,QAAQC,UAAUG,KAC5FpB,SAASC,cAAc,YAAYwB,UAAUC,OAAO,eAI5D3B,EAAO4B,QAAU,WACX5B,EAAO4B,SACTxB,EAAYD,EAAM0B,SDxBd9B,EAAU,CACd+B,QAAS,IACTC,WAAY,OAGP,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAQnC,MCuB3DQ,KAAK,SAAAO,GAEJV,EADiBU,EAASwB,OAAOC,SAAtB,IAAkCzB,EAASwB,OAAOE,aAG9DC,MAAM,SAAAC,GACLC,IAAQD,MAAM","file":"main.4dd74a1ca345f12fd090.js","sourcesContent":["\n\nconst baseUrl = \"https://api.apixu.com/v1/current.json\";\n\nconst key = '?key=be5f9fa4cd644103a12104533190708'\n\n\n\nexport default function fetchWeather(query) {\n  return fetch(`${baseUrl}${key}&q=${query}`)\n  .then(response => response.json())\n};\n","\n\n\nexport default () => {\n  const options = {\n    timeout: 5000,\n    maximumAge: 30 * 60 * 60 * 1000,\n  };\n\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\n  });\n};\n","import './styles.css';\nimport getGeoPosition from  './getGeoPosition';\nimport fetchWeather from './fetchWeather';\nimport PNotify from 'pnotify/dist/es/PNotify';\nconst button = document.querySelector('[type=\"button\"]');\nconst input = document.querySelector('[type=\"text\"]');\n\n\n\nfunction getWeathcer(query) {\n  fetchWeather(query)\n      .then(data => {\n        console.log('data', data);\n        console.log(data.location.name);\n        document.querySelector('[class=\"icon\"]').src = data.current.condition.icon;\n        document.querySelector('[class=\"icon\"]').alt = data.current.condition.text;\n        document.querySelector('[data-field=\"location\"]').textContent = data.location.name;\n        document.querySelector('[data-field=\"temp\"]').textContent = `${data.current.temp_c}\\u2103`;\n        document.querySelector('[data-field=\"humidity\"]').textContent = `${data.current.humidity}%`;\n        document.querySelector('[data-field=\"wind\"]').textContent = `${data.current.wind_kph}kph`;\n        document.querySelector('[data-field=\"wind\"]').textContent = `${data.current.wind_kph}kph`;\n        document.querySelector('[data-field=\"conditions\"]').textContent = `${data.current.condition.text}`;\n        document.querySelector('.weather').classList.remove('is-hidden')\n      });\n}\n\nbutton.onclick = function() {\n  if (button.onclick) {\n    getWeathcer(input.value);\n  }\n}\n\ngetGeoPosition()\n  .then(location => {\n    const query = `${location.coords.latitude},${location.coords.longitude}`;\n    getWeathcer(query)\n  })\n  .catch(error => {\n    PNotify.error('Нет прав доступа к геопозиции, используйте поиск по имени города.')\n  });\n\n\n"],"sourceRoot":""}